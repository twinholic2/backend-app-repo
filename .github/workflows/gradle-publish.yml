on:
  push:
    branches: [main]
    
env:
  AWS_REGION: "ap-northeast-2"      

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          # settings-path: ${{ github.workspace }}           

      # - name: Setup Gradle
      #   uses: gradle/gradle-build-action@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get image tag(version)
        id: image
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-5)
          echo VERSION=$VERSION
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: backend-app-repo
          IMAGE_TAG: ${{ steps.image.outputs.version }}
        run: |
          echo "ecr_repository=$ECR_REPOSITORY" >> "$GITHUB_OUTPUT"
          echo "image_tag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}   
      image_tag: ${{ steps.image.outputs.version }}
      sha: ${{ github.sha }}

  deploy:
    needs: build
    name: apply docker image tag to backend deployment manifest
    runs-on: ubuntu-latest
    env :
      IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
      GIT_ACCESS_TOKEN: ${{ secrets.ACTION_TOKEN }}
      HASH: ${{ needs.build.outputs.sha }}
      GIT_REPO: twinholic2/backend_manifest_repo

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GIT_REPO }}
          ref: 'main'
          token: ${{ env.GIT_ACCESS_TOKEN }}   
          
      - name: Set foobar to cool
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag = "${{ env.IMAGE_TAG }}"' values.yaml    

      - name: Commit files
        run: |
          git config --local user.email "odark@naver.com"
          git config --local user.name "twinholic2"
          git commit -a -m "Add changes"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ env.GIT_ACCESS_TOKEN }}
          repository: ${{ env.GIT_REPO }}
          force: true      
